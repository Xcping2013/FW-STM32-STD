<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\inc_mbtmc429_user_36.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\inc_mbtmc429_user_36.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Jul 30 10:29:38 2019
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CommandCheckAndExeViaUart1 &rArr; Command_Analysis_Process &rArr; Command_analysis_motor_set &rArr; TMC429_SetAxisParameter &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[35]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[35]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[52]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">AT24CXX_CheckOk</a> from bsp_eeprom_24xx.o(i.AT24CXX_CheckOk) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[0]">AT24CXX_Init</a> from bsp_eeprom_24xx.o(i.AT24CXX_Init) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[a]">AT24CXX_ReadF32</a> from bsp_eeprom_24xx.o(i.AT24CXX_ReadF32) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[6]">AT24CXX_ReadU16</a> from bsp_eeprom_24xx.o(i.AT24CXX_ReadU16) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[8]">AT24CXX_ReadU32</a> from bsp_eeprom_24xx.o(i.AT24CXX_ReadU32) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[4]">AT24CXX_ReadU8</a> from bsp_eeprom_24xx.o(i.AT24CXX_ReadU8) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[2]">AT24CXX_Reads</a> from bsp_eeprom_24xx.o(i.AT24CXX_Reads) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[b]">AT24CXX_WriteF32</a> from bsp_eeprom_24xx.o(i.AT24CXX_WriteF32) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[7]">AT24CXX_WriteU16</a> from bsp_eeprom_24xx.o(i.AT24CXX_WriteU16) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[9]">AT24CXX_WriteU32</a> from bsp_eeprom_24xx.o(i.AT24CXX_WriteU32) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[5]">AT24CXX_WriteU8</a> from bsp_eeprom_24xx.o(i.AT24CXX_WriteU8) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[3]">AT24CXX_Writes</a> from bsp_eeprom_24xx.o(i.AT24CXX_Writes) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[1d]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5b]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5c]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5d]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5e]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4b]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">EXTI2_IRQHandler</a> from bsp_mcu_exti.o(i.EXTI2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[53]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1c]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4c]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[54]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[56]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">SoftI2c_CheckDevice</a> from bsp_mcu_softi2c.o(i.SoftI2c_CheckDevice) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[e]">SoftI2c_Init</a> from bsp_mcu_softi2c.o(i.SoftI2c_Init) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[16]">SoftI2c_read_byte</a> from bsp_mcu_softi2c.o(i.SoftI2c_read_byte) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[18]">SoftI2c_reads</a> from bsp_mcu_softi2c.o(i.SoftI2c_reads) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[13]">SoftI2c_send_ack</a> from bsp_mcu_softi2c.o(i.SoftI2c_send_ack) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[15]">SoftI2c_send_byte</a> from bsp_mcu_softi2c.o(i.SoftI2c_send_byte) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[14]">SoftI2c_send_no_ack</a> from bsp_mcu_softi2c.o(i.SoftI2c_send_no_ack) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[10]">SoftI2c_start</a> from bsp_mcu_softi2c.o(i.SoftI2c_start) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[11]">SoftI2c_stop</a> from bsp_mcu_softi2c.o(i.SoftI2c_stop) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[12]">SoftI2c_wait_ack</a> from bsp_mcu_softi2c.o(i.SoftI2c_wait_ack) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[17]">SoftI2c_writes</a> from bsp_mcu_softi2c.o(i.SoftI2c_writes) referenced 2 times from bsp_mcu_softi2c.o(.data)
 <LI><a href="#[22]">SysTick_Handler</a> from bsp_mcu_systick.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[60]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[25]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[55]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[59]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5a]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4e]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[51]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[50]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4f]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[57]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[58]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">USART1_IRQHandler</a> from bsp_mcu_uart.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4a]">USART3_IRQHandler</a> from bsp_mcu_uart.o(i.USART3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4d]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[61]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">ee_ReadBytes</a> from bsp_eeprom_24xx.o(i.ee_ReadBytes) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[d]">ee_WriteBytes</a> from bsp_eeprom_24xx.o(i.ee_WriteBytes) referenced 2 times from bsp_eeprom_24xx.o(.data)
 <LI><a href="#[62]">fputc</a> from bsp_mcu_uart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[5f]">main</a> from inc_mbtmc429.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[61]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[63]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[102]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[103]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[104]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[105]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[106]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[19]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[107]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at24cxx_hw_init
</UL>

<P><STRONG><a name="[108]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePageStringToEEPROM
</UL>

<P><STRONG><a name="[88]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_button
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[8d]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
</UL>

<P><STRONG><a name="[65]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[109]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[10a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[67]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[10b]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[10c]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6a]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ee]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[64]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[10d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[10e]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[10f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[110]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>AT24CXX_CheckOk</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, bsp_eeprom_24xx.o(i.AT24CXX_CheckOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AT24CXX_CheckOk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>AT24CXX_Init</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, bsp_eeprom_24xx.o(i.AT24CXX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AT24CXX_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>AT24CXX_ReadF32</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_ReadF32))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AT24CXX_ReadF32 &rArr; AT24CXX_Reads
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Reads
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>AT24CXX_ReadU16</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_ReadU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AT24CXX_ReadU16 &rArr; AT24CXX_Reads
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Reads
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>AT24CXX_ReadU32</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_ReadU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AT24CXX_ReadU32 &rArr; AT24CXX_Reads
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Reads
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>AT24CXX_ReadU8</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_ReadU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AT24CXX_ReadU8 &rArr; AT24CXX_Reads
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Reads
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>AT24CXX_Reads</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, bsp_eeprom_24xx.o(i.AT24CXX_Reads))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT24CXX_Reads
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadU8
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadU32
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadU16
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadF32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>AT24CXX_WriteF32</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_WriteF32))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AT24CXX_WriteF32 &rArr; AT24CXX_Writes &rArr; drv_mdelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mdelay
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Writes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>AT24CXX_WriteU16</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_WriteU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AT24CXX_WriteU16 &rArr; AT24CXX_Writes &rArr; drv_mdelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mdelay
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Writes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>AT24CXX_WriteU32</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_WriteU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AT24CXX_WriteU32 &rArr; AT24CXX_Writes &rArr; drv_mdelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mdelay
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Writes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>AT24CXX_WriteU8</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_WriteU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AT24CXX_WriteU8 &rArr; AT24CXX_Writes &rArr; drv_mdelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mdelay
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Writes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>AT24CXX_Writes</STRONG> (Thumb, 238 bytes, Stack size 56 bytes, bsp_eeprom_24xx.o(i.AT24CXX_Writes))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AT24CXX_Writes &rArr; drv_mdelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteU8
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteU32
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteU16
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteF32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>CommandCheckAndExeViaUart1</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, inc_mbtmc429.o(i.CommandCheckAndExeViaUart1))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = CommandCheckAndExeViaUart1 &rArr; Command_Analysis_Process &rArr; Command_analysis_motor_set &rArr; TMC429_SetAxisParameter &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>Command_Analysis_Process</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, inc_mbtmc429.o(i.Command_Analysis_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Command_Analysis_Process &rArr; Command_analysis_motor_set &rArr; TMC429_SetAxisParameter &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetCPU
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_button
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandCheckAndExeViaUart1
</UL>

<P><STRONG><a name="[82]"></a>Command_analysis_button</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_button.o(i.Command_analysis_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Command_analysis_button &rArr; setChOutput &rArr; pinWrite &rArr; pinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_button
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChOutput
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[81]"></a>Command_analysis_dido</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, app_gpio_dido.o(i.Command_analysis_dido))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Command_analysis_dido &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_gpio
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[83]"></a>Command_analysis_eeprom</STRONG> (Thumb, 314 bytes, Stack size 88 bytes, app_eeprom_24xx.o(i.Command_analysis_eeprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Command_analysis_eeprom &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_eeprom
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritePageStringToEEPROM
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParamToEeprom
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPageStringFromEEPROM
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[85]"></a>Command_analysis_motor</STRONG> (Thumb, 1434 bytes, Stack size 32 bytes, app_motor_tmc429.o(i.Command_analysis_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Command_analysis_motor &rArr; TMC429_MoveToPosition &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Disable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Int
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorStop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmaxAutoByspeed
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[86]"></a>Command_analysis_motor_get</STRONG> (Thumb, 816 bytes, Stack size 24 bytes, app_motor_tmc429.o(i.Command_analysis_motor_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Command_analysis_motor_get &rArr; TMC429_GetAxisParameter &rArr; Read429SingleByte &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor_get
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[87]"></a>Command_analysis_motor_set</STRONG> (Thumb, 902 bytes, Stack size 32 bytes, app_motor_tmc429.o(i.Command_analysis_motor_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Command_analysis_motor_set &rArr; TMC429_SetAxisParameter &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor_set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[84]"></a>Command_analysis_uart3</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app_serial.o(i.Command_analysis_uart3))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Command_analysis_uart3 &rArr; InitUART_2 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Disable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_uart3
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[20]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp_mcu_exti.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EXTI2_IRQHandler &rArr; HardStop &rArr; Set429RampMode &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Disable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardStop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init_IN8
</UL>

<P><STRONG><a name="[a5]"></a>EXTI_Init_IN8</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_mcu_exti.o(i.EXTI_Init_IN8))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EXTI_Init_IN8 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f9]"></a>EnableInterrupts</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_sys_control.o(i.EnableInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init_IN8
</UL>

<P><STRONG><a name="[b3]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
</UL>

<P><STRONG><a name="[ba]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSWD_Init
</UL>

<P><STRONG><a name="[fd]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
</UL>

<P><STRONG><a name="[fe]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
</UL>

<P><STRONG><a name="[ff]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
</UL>

<P><STRONG><a name="[1b]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>HardStop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_motor_tmc429.o(i.HardStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HardStop &rArr; Set429RampMode &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Zero
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set429RampMode
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorStop
</UL>

<P><STRONG><a name="[ac]"></a>Init429</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, app_motor_tmc429.o(i.Init429))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Init429 &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Zero
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Datagram
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
</UL>

<P><STRONG><a name="[b1]"></a>InitUART_1</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, bsp_mcu_uart.o(i.InitUART_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = InitUART_1 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>InitUART_2</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, bsp_mcu_uart.o(i.InitUART_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = InitUART_2 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>MotorAutoReset_preset</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, app_motor_home.o(i.MotorAutoReset_preset))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = MotorAutoReset_preset &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChOutput
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Disable
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorStop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmaxAutoByspeed
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonRESET_process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[bc]"></a>MotorHomingWithHomeSensor</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, app_motor_home.o(i.MotorHomingWithHomeSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MotorHomingWithHomeSensor &rArr; setPositionAsOrigin &rArr; TMC429_MotorRotate &rArr; Write429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429SingleByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Short
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c0]"></a>MotorHomingWithLimitSwitch</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_motor_home.o(i.MotorHomingWithLimitSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MotorHomingWithLimitSwitch &rArr; setPositionAsOrigin &rArr; TMC429_MotorRotate &rArr; Write429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429SingleByte
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init_IN8
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
</UL>

<P><STRONG><a name="[f8]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>PrintfUart3DataToUart1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_serial.o(i.PrintfUart3DataToUart1))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PrintfUart3DataToUart1 &rArr; serial3_data_processing &rArr; Read429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial3_data_processing
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
</UL>

<P><STRONG><a name="[e8]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[a6]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init_IN8
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSWD_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
</UL>

<P><STRONG><a name="[e7]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[e9]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[c3]"></a>Read429Bytes</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Read429Bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read429Bytes &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[9a]"></a>Read429Int</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Read429Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read429Int &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial3_data_processing
</UL>

<P><STRONG><a name="[bd]"></a>Read429Short</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Read429Short))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithHomeSensor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial3_data_processing
</UL>

<P><STRONG><a name="[be]"></a>Read429SingleByte</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Read429SingleByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read429SingleByte &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithLimitSwitch
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithHomeSensor
</UL>

<P><STRONG><a name="[c5]"></a>Read429Status</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_motor_tmc429.o(i.Read429Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Read429Status &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteSPI1
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
</UL>

<P><STRONG><a name="[c4]"></a>ReadWrite429</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_motor_tmc429.o(i.ReadWrite429))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteSPI1
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Zero
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Datagram
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Bytes
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set429RampMode
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429SingleByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Short
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Int
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Bytes
</UL>

<P><STRONG><a name="[c6]"></a>ReadWriteSPI1</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bsp_mcu_spi.o(i.ReadWriteSPI1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Status
</UL>

<P><STRONG><a name="[89]"></a>ResetCPU</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_sys_control.o(i.ResetCPU))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
</UL>

<P><STRONG><a name="[ca]"></a>SPI1_Init</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, bsp_mcu_spi.o(i.SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
</UL>

<P><STRONG><a name="[cc]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[c7]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteSPI1
</UL>

<P><STRONG><a name="[c9]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteSPI1
</UL>

<P><STRONG><a name="[c8]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteSPI1
</UL>

<P><STRONG><a name="[cb]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[1f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>Set429RampMode</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Set429RampMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Set429RampMode &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardStop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorByRamp
</UL>

<P><STRONG><a name="[b0]"></a>SetAMax</STRONG> (Thumb, 348 bytes, Stack size 88 bytes, bsp_motor_tmc429.o(i.SetAMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Bytes
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmaxAutoByspeed
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init429
</UL>

<P><STRONG><a name="[9d]"></a>SetAmaxAutoByspeed</STRONG> (Thumb, 956 bytes, Stack size 16 bytes, app_motor_tmc429.o(i.SetAmaxAutoByspeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[f]"></a>SoftI2c_CheckDevice</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_mcu_softi2c.o(i.SoftI2c_CheckDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SoftI2c_CheckDevice &rArr; SoftI2c_wait_ack &rArr; SoftI2c_stop &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>SoftI2c_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_mcu_softi2c.o(i.SoftI2c_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SoftI2c_Init &rArr; SoftI2c_stop &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>SoftI2c_read_byte</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_mcu_softi2c.o(i.SoftI2c_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SoftI2c_read_byte &rArr; SoftI2c_send_no_ack &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_no_ack
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_ack
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_reads
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>SoftI2c_reads</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, bsp_mcu_softi2c.o(i.SoftI2c_reads))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SoftI2c_reads &rArr; SoftI2c_read_byte &rArr; SoftI2c_send_no_ack &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>SoftI2c_send_ack</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bsp_mcu_softi2c.o(i.SoftI2c_send_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SoftI2c_send_ack &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>SoftI2c_send_byte</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, bsp_mcu_softi2c.o(i.SoftI2c_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SoftI2c_send_byte &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_writes
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_reads
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_CheckDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>SoftI2c_send_no_ack</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bsp_mcu_softi2c.o(i.SoftI2c_send_no_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SoftI2c_send_no_ack &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>SoftI2c_start</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bsp_mcu_softi2c.o(i.SoftI2c_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SoftI2c_start &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_writes
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_reads
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_CheckDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>SoftI2c_stop</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_mcu_softi2c.o(i.SoftI2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SoftI2c_stop &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_writes
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_reads
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_Init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_CheckDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>SoftI2c_wait_ack</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_mcu_softi2c.o(i.SoftI2c_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SoftI2c_wait_ack &rArr; SoftI2c_stop &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_writes
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_reads
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_CheckDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>SoftI2c_writes</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, bsp_mcu_softi2c.o(i.SoftI2c_writes))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SoftI2c_writes &rArr; SoftI2c_wait_ack &rArr; SoftI2c_stop &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_mcu_softi2c.o(.data)
</UL>
<P><STRONG><a name="[d6]"></a>StopMotorByRamp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_motor_tmc429.o(i.StopMotorByRamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = StopMotorByRamp &rArr; Set429RampMode &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Zero
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set429RampMode
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
</UL>

<P><STRONG><a name="[d8]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[e1]"></a>SysTick_GetTimer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_mcu_systick.o(i.SysTick_GetTimer))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_every_ms
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_mcu_systick.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d7]"></a>SysTick_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_mcu_systick.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
</UL>

<P><STRONG><a name="[db]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
</UL>

<P><STRONG><a name="[dc]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
</UL>

<P><STRONG><a name="[df]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_CLK_Init
</UL>

<P><STRONG><a name="[da]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
</UL>

<P><STRONG><a name="[de]"></a>TMC429_CLK_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_mcu_timer.o(i.TMC429_CLK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TMC429_CLK_Init &rArr; TIM3_PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
</UL>

<P><STRONG><a name="[9b]"></a>TMC429_MotorRotate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_motor_tmc429.o(i.TMC429_MotorRotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TMC429_MotorRotate &rArr; Write429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set429RampMode
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithHomeSensor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
</UL>

<P><STRONG><a name="[98]"></a>TMC429_MotorStop</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_motor_tmc429.o(i.TMC429_MotorStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TMC429_MotorStop &rArr; HardStop &rArr; Set429RampMode &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardStop
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[e0]"></a>Task2_every_ms</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, app_sys_control.o(i.Task2_every_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Task2_every_ms &rArr; buttonRESET_process &rArr; MotorAutoReset_preset &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonSTART_process
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonRESET_process
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_GetTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>UART3_Disable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_serial.o(i.UART3_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART3_Disable &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial3_data_processing
</UL>

<P><STRONG><a name="[a1]"></a>UART3_Enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_serial.o(i.UART3_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART3_Enable &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
</UL>

<P><STRONG><a name="[48]"></a>USART1_IRQHandler</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, bsp_mcu_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_IRQHandler &rArr; USART_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART3_IRQHandler</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, bsp_mcu_uart.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART3_IRQHandler &rArr; USART_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
</UL>

<P><STRONG><a name="[e6]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
</UL>

<P><STRONG><a name="[b2]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
</UL>

<P><STRONG><a name="[e4]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[b7]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Disable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Enable
</UL>

<P><STRONG><a name="[b5]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
</UL>

<P><STRONG><a name="[e5]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
</UL>

<P><STRONG><a name="[1e]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>Write429Bytes</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Write429Bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Write429Bytes &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
</UL>

<P><STRONG><a name="[ae]"></a>Write429Datagram</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, bsp_motor_tmc429.o(i.Write429Datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Write429Datagram &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init429
</UL>

<P><STRONG><a name="[ad]"></a>Write429Int</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Write429Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Write429Int &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init429
</UL>

<P><STRONG><a name="[af]"></a>Write429Short</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, bsp_motor_tmc429.o(i.Write429Short))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Write429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init429
</UL>

<P><STRONG><a name="[ab]"></a>Write429Zero</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_motor_tmc429.o(i.Write429Zero))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Write429Zero &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardStop
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorByRamp
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init429
</UL>

<P><STRONG><a name="[eb]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[112]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_motor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_SetAxisParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MoveToPosition
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_eeprom
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadParamFromEeprom
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonSTART_process
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_button
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_gpio
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dido_hw_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at24cxx_hw_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_button
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Analysis_Process
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandCheckAndExeViaUart1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init_IN8
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_cmdList_uart3
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial3_data_processing
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
</UL>

<P><STRONG><a name="[113]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7e]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandCheckAndExeViaUart1
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[114]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[115]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[116]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[117]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[f2]"></a>at24cxx_hw_init</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_eeprom_24xx.o(i.at24cxx_hw_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = at24cxx_hw_init &rArr; LoadParamFromEeprom &rArr; SaveParamToEeprom
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadParamFromEeprom
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>buttonRESET_process</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_button.o(i.buttonRESET_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = buttonRESET_process &rArr; MotorAutoReset_preset &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChInput
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_every_ms
</UL>

<P><STRONG><a name="[e2]"></a>buttonSTART_process</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_button.o(i.buttonSTART_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = buttonSTART_process &rArr; setChOutput &rArr; pinWrite &rArr; pinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChOutput
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChInput
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_every_ms
</UL>

<P><STRONG><a name="[d5]"></a>delay_ms</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_mcu_delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_writes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
</UL>

<P><STRONG><a name="[f5]"></a>delay_us</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bsp_mcu_delay.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[f6]"></a>dido_hw_init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, app_gpio_dido.o(i.dido_hw_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dido_hw_init &rArr; pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSWD_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>drv_mdelay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_mcu_delay.o(i.drv_mdelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_mdelay
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Writes
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteU8
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteU32
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteU16
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteF32
</UL>

<P><STRONG><a name="[d2]"></a>drv_udelay</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_mcu_delay.o(i.drv_udelay))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_no_ack
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_ack
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_mdelay
</UL>

<P><STRONG><a name="[c]"></a>ee_ReadBytes</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, bsp_eeprom_24xx.o(i.ee_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ee_ReadBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>ee_WriteBytes</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, bsp_eeprom_24xx.o(i.ee_WriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ee_WriteBytes
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_eeprom_24xx.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>fputc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_mcu_uart.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[f4]"></a>getChInput</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_gpio_dido.o(i.getChInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getChInput &rArr; pinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonSTART_process
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonRESET_process
</UL>

<P><STRONG><a name="[5f]"></a>main</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, inc_mbtmc429.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; CommandCheckAndExeViaUart1 &rArr; Command_Analysis_Process &rArr; Command_analysis_motor_set &rArr; TMC429_SetAxisParameter &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dido_hw_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at24cxx_hw_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_every_ms
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfUart3DataToUart1
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithLimitSwitch
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithHomeSensor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableInterrupts
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandCheckAndExeViaUart1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init_IN8
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_2
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART_1
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinToggle
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_GetTimer
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[d1]"></a>pinMode</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, bsp_mcu_gpio.o(i.pinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pinMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dido_hw_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_no_ack
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_ack
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_Init
</UL>

<P><STRONG><a name="[8e]"></a>pinRead</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bsp_mcu_gpio.o(i.pinRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_GetAxisParameter
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getChInput
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithHomeSensor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_CheckDevice
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinToggle
</UL>

<P><STRONG><a name="[d4]"></a>pinReset</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_mcu_gpio.o(i.pinReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pinReset
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_no_ack
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_ack
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
</UL>

<P><STRONG><a name="[f7]"></a>pinSWD_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_mcu_gpio.o(i.pinSWD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pinSWD_Init &rArr; GPIO_PinRemapConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dido_hw_init
</UL>

<P><STRONG><a name="[d3]"></a>pinSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_mcu_gpio.o(i.pinSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_wait_ack
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_stop
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_start
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_no_ack
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_ack
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_read_byte
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
</UL>

<P><STRONG><a name="[fb]"></a>pinToggle</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, bsp_mcu_gpio.o(i.pinToggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pinToggle &rArr; pinWrite &rArr; pinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>pinWrite</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bsp_mcu_gpio.o(i.pinWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pinWrite &rArr; pinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChOutput
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dido_hw_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftI2c_send_byte
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinToggle
</UL>

<P><STRONG><a name="[a0]"></a>printf_cmdList_uart3</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_serial.o(i.printf_cmdList_uart3))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_uart3 &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_uart3
</UL>

<P><STRONG><a name="[8a]"></a>setChOutput</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, app_gpio_dido.o(i.setChOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = setChOutput &rArr; pinWrite &rArr; pinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorAutoReset_preset
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttonSTART_process
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_button
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPositionAsOrigin
</UL>

<P><STRONG><a name="[fa]"></a>tmc429_hw_init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, app_motor_tmc429.o(i.tmc429_hw_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = tmc429_hw_init &rArr; Init429 &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_ParameterPresetToRam
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_CLK_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardStop
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init429
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[cf]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[d0]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[fc]"></a>get_pin</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_mcu_gpio.o(i.get_pin))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinReset
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
</UL>

<P><STRONG><a name="[d9]"></a>TIM3_PWM_Init</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, bsp_mcu_timer.o(i.TIM3_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM3_PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_CLK_Init
</UL>

<P><STRONG><a name="[8c]"></a>printf_cmdList_gpio</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_gpio_dido.o(i.printf_cmdList_gpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_gpio &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_dido
</UL>

<P><STRONG><a name="[8b]"></a>printf_cmdList_button</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_button.o(i.printf_cmdList_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_button &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_button
</UL>

<P><STRONG><a name="[bb]"></a>LoadParamFromEeprom</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, app_eeprom_24xx.o(i.LoadParamFromEeprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LoadParamFromEeprom &rArr; SaveParamToEeprom
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParamToEeprom
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at24cxx_hw_init
</UL>

<P><STRONG><a name="[92]"></a>ReadPageStringFromEEPROM</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, app_eeprom_24xx.o(i.ReadPageStringFromEEPROM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadPageStringFromEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
</UL>

<P><STRONG><a name="[93]"></a>SaveParamToEeprom</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, app_eeprom_24xx.o(i.SaveParamToEeprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SaveParamToEeprom
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadParamFromEeprom
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
</UL>

<P><STRONG><a name="[91]"></a>WritePageStringToEEPROM</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, app_eeprom_24xx.o(i.WritePageStringToEEPROM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WritePageStringToEEPROM
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
</UL>

<P><STRONG><a name="[90]"></a>printf_cmdList_eeprom</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, app_eeprom_24xx.o(i.printf_cmdList_eeprom))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_eeprom &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_eeprom
</UL>

<P><STRONG><a name="[9e]"></a>TMC429_GetAxisParameter</STRONG> (Thumb, 856 bytes, Stack size 32 bytes, app_motor_tmc429.o(i.TMC429_GetAxisParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TMC429_GetAxisParameter &rArr; Read429SingleByte &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinRead
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Status
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429SingleByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Short
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_get
</UL>

<P><STRONG><a name="[9c]"></a>TMC429_MoveToPosition</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, app_motor_tmc429.o(i.TMC429_MoveToPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = TMC429_MoveToPosition &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set429RampMode
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmaxAutoByspeed
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[100]"></a>TMC429_ParameterPresetToRam</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, app_motor_tmc429.o(i.TMC429_ParameterPresetToRam))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc429_hw_init
</UL>

<P><STRONG><a name="[9f]"></a>TMC429_SetAxisParameter</STRONG> (Thumb, 964 bytes, Stack size 24 bytes, app_motor_tmc429.o(i.TMC429_SetAxisParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = TMC429_SetAxisParameter &rArr; SetAmaxAutoByspeed &rArr; SetAMax &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Bytes
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAMax
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set429RampMode
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWrite429
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Bytes
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAmaxAutoByspeed
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_set
</UL>

<P><STRONG><a name="[94]"></a>printf_cmdList_motor</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, app_motor_tmc429.o(i.printf_cmdList_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_motor &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[95]"></a>printf_cmdList_motor_get</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, app_motor_tmc429.o(i.printf_cmdList_motor_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_motor_get &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[96]"></a>printf_cmdList_motor_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_motor_tmc429.o(i.printf_cmdList_motor_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printf_cmdList_motor_set &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_analysis_motor
</UL>

<P><STRONG><a name="[bf]"></a>setPositionAsOrigin</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, app_motor_home.o(i.setPositionAsOrigin))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = setPositionAsOrigin &rArr; TMC429_MotorRotate &rArr; Write429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChOutput
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Short
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write429Int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC429_MotorRotate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorByRamp
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithLimitSwitch
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorHomingWithHomeSensor
</UL>

<P><STRONG><a name="[c2]"></a>serial3_data_processing</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_serial.o(i.serial3_data_processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = serial3_data_processing &rArr; Read429Short &rArr; ReadWrite429 &rArr; ReadWriteSPI1
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Disable
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Short
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read429Int
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintfUart3DataToUart1
</UL>

<P><STRONG><a name="[ed]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ec]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[f0]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ef]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
